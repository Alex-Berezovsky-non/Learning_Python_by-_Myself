"""
КОНСПЕКТ ПО ПОЛЬЗОВАТЕЛЬСКОМУ ВВОДУ В PYTHON
Источник: https://www.w3schools.com/python/python_user_input.asp
"""

# =============================================
# 1. Функция input()
# =============================================

# 1.1 Базовое использование
name = input("Введите ваше имя: ")
print(f"Привет, {name}!")

# 1.2 Особенности:
# - Всегда возвращает строку (str)
# - Приостанавливает выполнение программы
# - Принимает необязательный приглашающий текст

# =============================================
# 2. Преобразование типов данных
# =============================================

# 2.1 Целое число
age = int(input("Сколько вам лет? "))
print(f"Через 5 лет вам будет {age + 5}")

# 2.2 Число с плавающей точкой
height = float(input("Ваш рост в метрах: "))
print(f"Ваш рост в сантиметрах: {height * 100:.0f} см")

# 2.3 Булево значение
response = input("Вы согласны? (да/нет): ").lower()
is_agreed = response == "да"
print(f"Согласие: {'Да' if is_agreed else 'Нет'}")

# 2.4 Обработка ошибок преобразования
try:
    weight = float(input("Ваш вес в кг: "))
except ValueError:
    print("Ошибка: введите число!")
    weight = 0.0

# =============================================
# 3. Множественный ввод
# =============================================

# 3.1 Разделение строки
data = input("Введите имя, возраст и рост через запятую: ")
parts = data.split(",")
if len(parts) == 3:
    name, age, height = parts
    print(f"Имя: {name.strip()}, Возраст: {age.strip()}, Рост: {height.strip()}")

# 3.2 Множественный ввод через цикл
numbers = []
print("Введите 5 чисел:")
for i in range(5):
    num = float(input(f"Число {i+1}: "))
    numbers.append(num)
print(f"Среднее значение: {sum(numbers)/len(numbers):.2f}")

# =============================================
# 4. Валидация ввода
# =============================================

# 4.1 Проверка диапазона
while True:
    try:
        score = int(input("Оценка (0-100): "))
        if 0 <= score <= 100:
            break
        print("Ошибка: число должно быть от 0 до 100!")
    except ValueError:
        print("Ошибка: введите целое число!")

# 4.2 Проверка на пустой ввод
username = ""
while not username.strip():
    username = input("Введите имя пользователя: ")
    if not username.strip():
        print("Имя пользователя не может быть пустым!")

# =============================================
# 5. Пароли и скрытый ввод
# =============================================

# 5.1 Использование getpass (для паролей)
from getpass import getpass

password = getpass("Введите пароль: ")
print(f"Длина пароля: {len(password)} символов")

# =============================================
# 6. Практические примеры
# =============================================

# 6.1 Калькулятор
def calculator():
    try:
        num1 = float(input("Первое число: "))
        operator = input("Оператор (+, -, *, /): ")
        num2 = float(input("Второе число: "))
        
        if operator == "+":
            result = num1 + num2
        elif operator == "-":
            result = num1 - num2
        elif operator == "*":
            result = num1 * num2
        elif operator == "/":
            if num2 == 0:
                return "Ошибка: деление на ноль!"
            result = num1 / num2
        else:
            return "Неизвестный оператор!"
        
        return f"Результат: {result:.2f}"
    
    except ValueError:
        return "Ошибка: введите числа!"

# print(calculator())

# 6.2 Форма регистрации
def registration_form():
    print("\n=== Регистрация ===")
    name = input("Имя: ")
    email = input("Email: ")
    
    # Проверка email
    while "@" not in email or "." not in email:
        print("Некорректный email!")
        email = input("Email: ")
    
    password = getpass("Пароль: ")
    confirm_password = getpass("Подтвердите пароль: ")
    
    while password != confirm_password:
        print("Пароли не совпадают!")
        password = getpass("Пароль: ")
        confirm_password = getpass("Подтвердите пароль: ")
    
    print("Регистрация успешна!")
    return {"name": name, "email": email}

# user = registration_form()

# 6.3 Опросник
def survey():
    questions = [
        "Ваш любимый цвет?",
        "Ваше любимое блюдо?",
        "Ваше хобби?"
    ]
    
    answers = []
    for question in questions:
        answer = input(question + " ")
        answers.append(answer)
    
    print("\nВаши ответы:")
    for i, (q, a) in enumerate(zip(questions, answers), 1):
        print(f"{i}. {q} {a}")

# survey()

"""
КЛЮЧЕВЫЕ ТЕЗИСЫ:
1. Функция input():
   - Возвращает строку (str)
   - Принимает необязательный параметр prompt
   - Блокирует выполнение до ввода данных

2. Преобразование типов:
   - int() для целых чисел
   - float() для чисел с плавающей точкой
   - bool() для логических значений
   - Всегда используйте try-except для обработки ошибок

3. Валидация ввода:
   - Проверяйте обязательные поля
   - Контролируйте диапазоны значений
   - Обрабатывайте неверные форматы
   - Используйте циклы для повторного запроса

4. Безопасность:
   - Для паролей используйте getpass.getpass()
   - Не показывайте чувствительную информацию
   - Проверяйте минимальные требования к данным

5. Best practices:
   - Четко формулируйте приглашения к вводу
   - Обрабатывайте все возможные ошибки
   - Предоставляйте обратную связь при неверном вводе
   - Для сложных форм используйте многошаговый ввод
   - Тестируйте граничные случаи

6. Типичные ошибки:
   - Предположение, что ввод всегда корректный
   - Отсутствие обработки исключений
   - Неучет пробельных символов (.strip())
   - Неправильное преобразование типов

7. Продвинутые техники:
   - Регулярные выражения для сложной валидации
   - Ввод через аргументы командной строки (argparse)
   - Графические интерфейсы для ввода (Tkinter, PyQt)
   - Чтение ввода из файлов

8. Применение:
   - Консольные утилиты
   - Интерактивные калькуляторы
   - Формы регистрации и авторизации
   - Опросники и анкеты
   - Интерактивные обучающие программы
"""