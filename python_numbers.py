"""
КОНСПЕКТ ПО ЧИСЛАМ В PYTHON
Источник: https://www.w3schools.com/python/python_numbers.asp
"""

# =============================================
# 1. Основные типы чисел
# =============================================

# 1.1 Целые числа (int)
x = 10
y = -500
big_num = 123456789012345678901234567890  # Python поддерживает очень большие целые числа
print(type(x))  # <class 'int'>

# 1.2 Числа с плавающей точкой (float)
pi = 3.1415
temperature = -12.75
sci_notation = 2.5e4  # 25000.0 (экспоненциальная запись)
print(type(pi))  # <class 'float'>

# 1.3 Комплексные числа (complex)
comp = 3 + 5j
comp2 = complex(2, -3)  # 2-3j
print(comp.real)  # 3.0 (вещественная часть)
print(comp.imag)  # 5.0 (мнимая часть)

# =============================================
# 2. Математические операции
# =============================================

# 2.1 Базовые операции
a, b = 10, 3
print(a + b)   # 13
print(a - b)   # 7
print(a * b)   # 30
print(a ** b)  # 1000 (возведение в степень)
print(a / b)   # 3.3333333333333335 (обычное деление)
print(a // b)  # 3 (целочисленное деление)
print(a % b)   # 1 (остаток от деления)

# 2.2 Приоритет операций
result = 5 + 3 * 2 ** 2  # 5 + (3*(2^2)) = 5+12=17
print(result)

# 2.3 Особенности деления
print(7 / 2)   # 3.5 (всегда возвращает float)
print(7 // 2)  # 3 (отбрасывает дробную часть)

# =============================================
# 3. Преобразование типов
# =============================================

# 3.1 Явное преобразование
num_int = 5
num_float = float(num_int)  # 5.0
num_str = str(num_int)      # "5"

num_float = 3.99
num_int = int(num_float)    # 3 (отбрасывает дробную часть)

# 3.2 Автоматическое преобразование
result = 4 + 5.5  # int + float = float
print(result)     # 9.5

# =============================================
# 4. Полезные функции
# =============================================

# 4.1 Основные математические функции
print(abs(-7.25))    # 7.25 (модуль числа)
print(pow(2, 3))     # 8 (2 в степени 3)
print(round(3.1415, 2))  # 3.14 (округление до 2 знаков)
print(max(5, 9, 2))  # 9
print(min(5, 9, 2))  # 2

# 4.2 Модуль math (дополнительные функции)
import math

print(math.sqrt(25))     # 5.0 (квадратный корень)
print(math.ceil(3.2))    # 4 (округление вверх)
print(math.floor(3.9))   # 3 (округление вниз)
print(math.factorial(5)) # 120
print(math.gcd(12, 18))  # 6 (НОД)

# =============================================
# 5. Генерация случайных чисел
# =============================================
import random

# 5.1 Случайное целое
rand_int = random.randint(1, 10)  # от 1 до 10 включительно

# 5.2 Случайное float
rand_float = random.random()      # от 0.0 до 1.0

# 5.3 Выбор из последовательности
nums = [1, 2, 3, 4, 5]
rand_choice = random.choice(nums)

# =============================================
# 6. Форматы чисел
# =============================================

# 6.1 Подчеркивания для читаемости
million = 1_000_000
credit_card = 1234_5678_9012_3456

# 6.2 Экспоненциальная запись
avogadro = 6.022e23       # 6.022 × 10^23
micro = 1e-6              # 0.000001

# =============================================
# 7. Особенности и предостережения
# =============================================

# 7.1 Ошибки округления float (из-за двоичного представления)
print(0.1 + 0.2)  # 0.30000000000000004 (не 0.3!)

# 7.2 Сравнение float
a = 0.1 + 0.2
b = 0.3
print(math.isclose(a, b))  # True (правильный способ сравнения)

# 7.3 Бесконечность и NaN
infinity = float('inf')
nan = float('nan')

# =============================================
# 8. Практические примеры
# =============================================

# 8.1 Расчет гипотенузы
a, b = 3, 4
c = math.sqrt(a**2 + b**2)  # 5.0

# 8.2 Конвертация температур
fahrenheit = 77
celsius = (fahrenheit - 32) * 5/9  # 25.0

# 8.3 Финансовые расчеты
principal = 1000
rate = 0.05
years = 5
amount = principal * (1 + rate) ** years  # ~1276.28

"""
КЛЮЧЕВЫЕ ТЕЗИСЫ:
1. Основные числовые типы: int, float, complex
2. Деление / всегда возвращает float, // - целочисленное
3. Используйте math.isclose() для сравнения float
4. Для сложных операций подключайте модуль math
5. Случайные числа генерируются через модуль random
6. Избегайте точных сравнений чисел с плавающей точкой
7. Используйте _ для визуального разделения больших чисел
8. Python автоматически преобразует int → float в выражениях
9. Целые числа могут быть любой длины (ограничение - память)
10. complex хранят вещественную и мнимую части
"""