"""
КОНСПЕКТ ПО ПРИВЕДЕНИЮ ТИПОВ В PYTHON
Источник: https://www.w3schools.com/python/python_casting.asp
"""

# =============================================
# 1. Основы приведения типов (Type Casting)
# =============================================

# Приведение типов - преобразование одного типа данных в другой
# В Python используется явное (ручное) преобразование через функции-конструкторы

# 1.1 Неявное (автоматическое) преобразование
a = 5       # int
b = 2.5     # float
result = a + b  # int автоматически преобразуется в float
print(result, type(result))  # 7.5 <class 'float'>

# 1.2 Явное преобразование
num_str = "123"
num_int = int(num_str)  # Явное преобразование строки в int
print(num_int, type(num_int))  # 123 <class 'int'>

# =============================================
# 2. Основные функции приведения типов
# =============================================

# 2.1 int() - преобразование в целое число
x = int(3.99)     # 3 (отбрасывает дробную часть)
y = int("456")    # 456 (строка -> int)
# z = int("hello") # ValueError: нечисловая строка

# 2.2 float() - преобразование в число с плавающей точкой
a = float(7)          # 7.0
b = float("4.25")     # 4.25
c = float(" -3.5e2 ") # -350.0 (с пробелами и экспонентой)

# 2.3 str() - преобразование в строку
s1 = str(25)      # "25"
s2 = str(3.14)    # "3.14"
s3 = str([1,2,3]) # "[1, 2, 3]"

# 2.4 bool() - преобразование в логический тип
print(bool(0))     # False
print(bool(42))    # True
print(bool(""))    # False
print(bool(" "))   # True

# =============================================
# 3. Преобразование коллекций
# =============================================

# 3.1 list() - преобразование в список
tuple_data = (1, 2, 3)
list_data = list(tuple_data)  # [1, 2, 3]

str_to_list = list("hello")   # ['h', 'e', 'l', 'l', 'o']

# 3.2 tuple() - преобразование в кортеж
list_data = [4, 5, 6]
tuple_data = tuple(list_data) # (4, 5, 6)

# 3.3 set() - преобразование в множество
list_with_dupes = [1, 2, 2, 3]
set_data = set(list_with_dupes) # {1, 2, 3}

# 3.4 dict() - преобразование в словарь
list_of_tuples = [("a", 1), ("b", 2)]
dict_data = dict(list_of_tuples)  # {'a': 1, 'b': 2}

# =============================================
# 4. Особые случаи преобразования
# =============================================

# 4.1 Преобразование строк с разным содержимым
print(int(" 100 "))    # 100 (игнорирует пробелы)
print(float("3.14abc", )) # Ошибка (нечисловые символы)

# 4.2 Преобразование между разными системами счисления
hex_num = int("1a", 16)   # 26 (шестнадцатеричная)
bin_num = int("1010", 2)  # 10 (двоичная)

# 4.3 Преобразование символов в ASCII-код и обратно
char = ord("A")   # 65
code = chr(65)    # 'A'

# =============================================
# 5. Обработка ошибок преобразования
# =============================================

# 5.1 Пример с обработкой исключений
try:
    invalid = int("abc123")
except ValueError as e:
    print(f"Ошибка: {e}")  # Выведет сообщение об ошибке

# 5.2 Проверка перед преобразованием
value = "12.5"
if value.replace(".", "", 1).isdigit():
    print(float(value))
else:
    print("Нечисловое значение")

# =============================================
# 6. Практические примеры использования
# =============================================

# 6.1 Обработка пользовательского ввода
user_input = input("Введите число: ")
if user_input.isdigit():
    number = int(user_input)
else:
    print("Ошибка: нужно ввести целое число")

# 6.2 Конвертация данных из файла
# Предположим, файл содержит: "3.14, 5, 42"
with open("data.txt") as f:
    data = [float(x.strip()) for x in f.read().split(",")]
    # [3.14, 5.0, 42.0]

# 6.3 Генерация строковых ID
user_id = "user_" + str(12345).zfill(8)  # "user_00012345"

"""
КЛЮЧЕВЫЕ ТЕЗИСЫ:
1. Используйте явное преобразование через int(), float(), str() и т.д.
2. При преобразовании строк в числа проверяйте содержимое строки
3. Коллекции можно преобразовывать между собой (list ↔ tuple ↔ set)
4. Для обработки ошибок преобразования используйте try-except
5. Преобразование в bool: 0, пустые объекты и None → False
6. Используйте проверки типа (isdigit(), isinstance()) перед преобразованием
7. Специальные преобразования: ord()/chr() для символов, int() с указанием СС
8. Неявное преобразование работает только для совместимых типов (int → float)
"""